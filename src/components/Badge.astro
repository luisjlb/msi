---
import type { HTMLAttributes } from "astro/types";
import { cva, type VariantProps } from "class-variance-authority";

const badge = cva(
  [
    "rounded-full",
    "uppercase",
    "w-fit",
    "font-medium",
    "z-0",
    "text-[0.7rem]",
    "py-0.5",
  ],
  {
    variants: {
      intent: {
        primary: ["bg-blue-500", "text-white", "border-transparent"],
        secondary: ["bg-white", "text-gray-800", "border-gray-400"],
        doubtful: ["bg-constructive", "text-white", "border-transparent"],
        constructive: ["bg-doubtful", "text-white", "border-transparent"],
      },
      size: {
        small: ["md:py-1", "px-2 md:px-3  text-[20px]"],
        medium: ["md: text-[20px]", "md:py-1.5", "px-3 md:px-4"],
      },
    },
  }
);

export interface Props
  extends HTMLAttributes<"span">,
    VariantProps<typeof badge> {}

const { intent = "primary", size = "medium" } = Astro.props;
---

<span {...Astro.props} class={badge({ intent, size })}>
  <slot />
</span>
